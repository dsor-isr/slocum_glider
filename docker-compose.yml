# This Docker Compose file runs the Gazebo simulation and the glider control
# system simulation.

version: "3"

services:
  ros-master:
    image: ros:noetic-ros-core
    command: stdbuf -o L roscore
    networks:
      - ros
    restart: always

  gazebo:
    image: glider_hybrid_whoi:latest
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities:
              - gpu
    build:
      context: ../glider_hybrid_whoi
      dockerfile: docker/Dockerfile
    networks:
      - ros
    environment:
      - "DISPLAY"
      - "ROS_MASTER_URI=http://ros-master:11311"
      - "QT_X11_NO_MITSHM=1"
    volumes:
      - "/tmp/.X11-unix:/tmp/.X11-unix"
      - "/etc/localtime:/etc/localtime:ro"
    command:
      - stdbuf
      - -o
      - L
      - roslaunch
      - --wait
      - glider_hybrid_whoi_gazebo
      - BuzzBay_stratified_current_docker.launch
    privileged: true
    security_opt:
      - seccomp:unconfined
    user: "${UID:-1000}:${GID:-1000}"

  glider_control_sim:
    image: registry.gitlab.com/sentinel-aug/ros/slocum_glider/extctl-sim
    build:
      context: .
      dockerfile: docker/Dockerfile.extctl_sim
    networks:
      - ros
    environment:
      - "ROS_MASTER_URI=http://ros-master:11311"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "./local_glider_files:/gliderfs"
    command:
      - stdbuf
      - -o
      - L
      - roslaunch
      - --wait
      - slocum_glider_extctl_sim
      - sim_driver.launch
      - data_dir:=/gliderfs

  glider_mission_controller:
    image: registry.gitlab.com/sentinel-aug/ros/slocum_glider/mission-controller
    build:
      context: .
      dockerfile: docker/Dockerfile.mission_controller
    networks:
      - ros
    environment:
      - "ROS_MASTER_URI=http://ros-master:11311"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
    command:
      - stdbuf
      - -o
      - L
      - roslaunch
      - --wait
      - slocum_glider_mission_controller
      - sim_mission_controller.launch

networks:
  ros: {}
