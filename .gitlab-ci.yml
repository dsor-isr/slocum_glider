variables:
  ROS_VERSION: melodic

image: ros:${ROS_VERSION}-ros-base

stages:
  - Test
  - Build images
  - Build image manifests
  - Release

roslint:
  stage: Test
  script:
    - apt-get update
    - apt-get install ros-${ROS_VERSION}-roslint
    - source /opt/ros/${ROS_VERSION}/setup.bash
    - mkdir -p /catkin_ws/src
    - ln -s $(pwd) /catkin_ws/src/${CI_PROJECT_NAME}
    - cd /catkin_ws/src
    - catkin_init_workspace
    - cd ..
    - catkin_make
    - catkin_make roslint
  needs: []

.Build arch image - kaniko:
  stage: Build images
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    IMAGE_NAME: $CI_PROJECT_NAME
  script:
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"username\":\"${CI_REGISTRY_USER}\",\"password\":\"${CI_REGISTRY_PASSWORD}\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor "--context=$CI_PROJECT_DIR" "--dockerfile=$DOCKERFILE" --cache=true --cache-repo="$CI_REGISTRY_IMAGE/kaniko" --destination "$CI_REGISTRY_IMAGE/tmp/$IMAGE_NAME:$CI_PIPELINE_IID"

Build kitchensink image - amd64:
  extends: .Build arch image - kaniko
  variables:
    ARCH: amd64
    DOCKERFILE: docker/Dockerfile

Build kitchensink image - arm64:
  extends: .Build arch image - kaniko
  variables:
    ARCH: arm64v8
    DOCKERFILE: docker/Dockerfile
  tags:
    - arm64

# Build kitchensink manifest:
#   stage: Build image manifests
#   image: docker:19.03
#   environment:
#     name: GitLab Docker registry/$CI_COMMIT_REF_SLUG
#   variables:
#     DOCKER_TLS_CERTDIR: "/certs"
#     DOCKER_CLI_EXPERIMENTAL: "enabled"
#   services:
#     - docker:19.03-dind
#   before_script:
#     - docker info
#   script:
#     - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
#     - docker manifest create "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" "$CI_REGISTRY_IMAGE/amd64/$CI_PROJECT_NAME:$CI_PIPELINE_IID" "$CI_REGISTRY_IMAGE/arm64v8/$CI_PROJECT_NAME:$CI_PIPELINE_IID"
#     - docker manifest create "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" "$CI_REGISTRY_IMAGE/amd64/$CI_PROJECT_NAME:$CI_PIPELINE_IID" "$CI_REGISTRY_IMAGE/arm64v8/$CI_PROJECT_NAME:$CI_PIPELINE_IID"
#     - docker manifest push -p "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
#     - docker manifest push -p "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
#   resource_group: docker_reg


Release:
  stage: Release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+(\.[0-9]+)*(-.*)?$/'
  script:
    - "true"
  release:
    name: 'Slocum Glider $CI_COMMIT_TAG'
    description: 'Slocum Glider ROS package $CI_COMMIT_TAG'
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_TAG'
